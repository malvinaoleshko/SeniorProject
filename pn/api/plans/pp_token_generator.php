<?php
require_once('../../variables.php');

$pp_token = "";

function get_existing_token(){
    //Getting global variables
    global $db_host, $db_name, $db_user, $db_pass, $pp_token;
    $con = new PDO("mysql:host=$db_host;dbname=$db_name", $db_user, $db_pass);
    $con->setAttribute(PDO::ATTR_EMULATE_PREPARES, FALSE);
    $stmt = $con->prepare("
        SELECT c.value AS access_token
        FROM cache as c
        WHERE c.name = 'access_token'
        ");
    $stmt->execute();
    $result = $stmt->fetchAll();
    $pp_token = $result[0]['access_token'];
}

/**
 * Gets new token from PayPal API and updates $pp_token, updates db as well for future calls
 * Should be called if HTTP Code for a request returns 401 - Unauthorized Error : Token probably expired
 * @return bool|string false if failed, a new token if succeeded
 */
function gen_new_token(){
    global $db_host, $db_name, $db_user, $db_pass, $pp_client_id, $pp_secret, $pp_token;
    // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
    $ch = curl_init();

    curl_setopt($ch, CURLOPT_URL, 'https://api.sandbox.paypal.com/v1/oauth2/token');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, "grant_type=client_credentials");
    curl_setopt($ch, CURLOPT_USERPWD, $pp_client_id . ':' . $pp_secret);

    $headers = array();
    $headers[] = 'Accept: application/json';
    $headers[] = 'Accept-Language: en_US';
    $headers[] = 'Content-Type: application/x-www-form-urlencoded';
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

    $result = curl_exec($ch);
    $result = json_decode($result,true); //Turn JSON to PHP obj
    $info = curl_getinfo($ch);
    if(!($info['http_code'] == 200)){
        curl_close($ch);
        return false;
    }
    curl_close($ch);

    //Return
    $pp_token = $result['access_token'];

    //We now update the db access_token
    $con = new PDO("mysql:host=$db_host;dbname=$db_name", $db_user, $db_pass);
    $con->setAttribute(PDO::ATTR_EMULATE_PREPARES, FALSE);
    $stmt = $con->prepare("UPDATE cache AS c SET c.value = ? WHERE (c.cache_id = 1)");
    $stmt->execute([$pp_token]);
    $result = $stmt->fetchAll();

    return $pp_token;
}

//Main
get_existing_token();

